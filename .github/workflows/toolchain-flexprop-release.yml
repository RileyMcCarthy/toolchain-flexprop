name: toolchain-flexprop
permissions:
  contents: write
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to create release from'     
        required: true
        default: ''
jobs:
  build-multiplatform:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest,ubuntu-latest,macos-latest]
    steps:
    - name: Install Bison
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        install: gcc make bison
    # Checkout spin2cpp repo and setup environment
    - uses: actions/checkout@v3
      with:
        repository: totalspectrum/spin2cpp
        ref: v${{ github.event.inputs.branch }}
        submodules: recursive
    # make spin2cpp
    - name: Make targets (Windows only)
      if: runner.os == 'Windows'
      run: msys2 -c make
    - name: Make targets (Non-Windows)
      if: runner.os != 'Windows'
      run: make
    # Create tools directory
    - name: Make tools directory
      run: mkdir ./tools
    # Rename tools to .exe, .mac, and '' for windows, max, linux 
    - if: runner.os == 'Windows'
      run: |
        msys2 -c 'cp build/flexcc tools/flexcc.exe'
        msys2 -c 'cp build/flexspin tools/flexspin.exe'
        msys2 -c 'cp build/spin2cpp tools/spin2cpp.exe'
    - if: runner.os == 'Linux'
      run: |
        cp build/flexcc tools/flexcc
        cp build/flexspin tools/flexspin
        cp build/spin2cpp tools/spin2cpp
        cp -R include tools/include
    - if: runner.os == 'macOS'
      run: |
        cp build/flexcc tools/flexcc.mac
        cp build/flexspin tools/flexspin.mac
        cp build/spin2cpp tools/spin2cpp.mac
    # Uploading build files
    - name: Archive results
      uses: actions/upload-artifact@v3
      with:
        name: tools-${{ runner.os }}
        path: 'tools/'
  create-release:
    needs: build-multiplatform
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Create artifact dir
      run: mkdir -p ./artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts
    - name: Update platformio package.json
      run: >
        echo '
        {
          "name": "toolchain-flexprop",
          "version": "${{ github.event.inputs.branch }}",
          "description": "FlexProp toolchain for parallax devices",
          "keywords": [
            "toolchain",
            "build tools",
            "compiler",
            "assembler",
            "linker",
            "preprocessor",
            "microchip",
            "parallax",
            "propeller"
          ],
          "homepage": "https://github.com/totalspectrum/spin2cpp",
          "license": "GPL-2.0-or-later"
        }
        ' > 'package.json'
    # Create build directory
    - name: Create release directory and copy required files
      run: |
        mkdir 'bin'
        cp -R artifacts/tools-Linux/include include
        cp artifacts/tools-Windows/flexcc.exe ./bin
        cp artifacts/tools-Windows/flexspin.exe ./bin
        cp artifacts/tools-Windows/spin2cpp.exe ./bin
        cp artifacts/tools-Linux/flexcc ./bin
        cp artifacts/tools-Linux/flexspin ./bin
        cp artifacts/tools-Linux/spin2cpp ./bin
        cp artifacts/tools-macOS/flexcc.mac ./bin
        cp artifacts/tools-macOS/flexspin.mac ./bin
        cp artifacts/tools-macOS/spin2cpp.mac ./bin
        rm -R artifacts
    - name: Change permissions
      run: chmod a+rwx ./bin/*
    - name: Push updated package
      run: |
        git config --global user.name 'rileymccarthy'
        git config --global user.email 'riley.mccarthy@yahoo.com'
        git add 'package.json'
        git add './bin/*'
        git add './include/*'
        git commit -am "v${{ github.event.inputs.branch }}"
        git push
    - name: Release with Notes
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.branch }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
