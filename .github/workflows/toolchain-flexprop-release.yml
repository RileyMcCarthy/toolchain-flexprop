name: toolchain-flexprop
permissions:
  contents: write
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'     
        required: true
        default: ''
jobs:
  
  upload-include:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: totalspectrum/spin2cpp
          ref: v${{ github.event.inputs.version }}
          submodules: recursive
      - name: Archive include files
        uses: actions/upload-artifact@v4
        with:
          name: include
          path: 'include/'

  build-cross-platform:
    needs: upload-include
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [win32,rpi,macosx,linux64]
    steps:
      - name: Upgrade packages
        run: sudo apt-get update
      - name: Install MinGW
        if: matrix.os == 'win32'
        run: "sudo apt-get install gcc-mingw-w64-i686"
      - name: Install arm GCC
        if: matrix.os == 'rpi'
        run: "sudo apt install gcc-arm-linux-gnueabihf"
      - name: Setup osxcross for macOS
        if: matrix.os == 'macosx'
        uses: mbround18/setup-osxcross@v1
        with:
          osx-version: "12.3"
      # Checkout spin2cpp repo and setup environment
      - uses: actions/checkout@v4
        with:
          repository: totalspectrum/spin2cpp
          ref: v${{ github.event.inputs.version }}
          submodules: recursive
      # make spin2cpp
      - name: Make targets
        run: make CROSS=${{ matrix.os }}
      # Moves files
      - name: Move Files
        run: |
          mkdir ./tools
          # Handle different build directory mappings based on upstream Makefile
          if [[ "${{ matrix.os }}" == "linux64" ]]; then
            BUILD_DIR="build"
          else
            BUILD_DIR="build-${{ matrix.os }}"
          fi
          cp ${BUILD_DIR}/flexcc* ./tools/flexcc
          cp ${BUILD_DIR}/flexspin* ./tools/flexspin
          cp ${BUILD_DIR}/spin2cpp* ./tools/spin2cpp
      # Uploading build files
      - name: Archive results
        uses: actions/upload-artifact@v4
        with:
          name: build-cross-platform-tools-${{ matrix.os }}
          path: "tools/"

  create-release:
    needs: [build-cross-platform]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Create artifact dir
      run: mkdir -p ./artifacts
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    - name: Update platformio package.json
      run: >
        echo '
        {
          "name": "toolchain-flexprop",
          "version": "v${{ github.event.inputs.version }}",
          "description": "FlexProp toolchain for parallax devices",
          "keywords": [
            "toolchain",
            "build tools",
            "compiler",
            "assembler",
            "linker",
            "preprocessor",
            "microchip",
            "parallax",
            "propeller"
          ],
          "homepage": "https://github.com/totalspectrum/spin2cpp",
          "license": "GPL-2.0-or-later"
        }
        ' > 'package.json'
    
    # Create build directory
    - name: Create release directory and copy required files
      run: |
        mkdir -p 'bin'
        rm -R -f include
        cp -R artifacts/include ./
        cp artifacts/build-cross-platform-tools-linux64/flexcc ./bin/flexcc
        cp artifacts/build-cross-platform-tools-linux64/flexspin ./bin/flexspin
        cp artifacts/build-cross-platform-tools-linux64/spin2cpp ./bin/spin2cpp
        cp artifacts/build-cross-platform-tools-macosx/flexcc ./bin/flexcc.mac
        cp artifacts/build-cross-platform-tools-macosx/flexspin ./bin/flexspin.mac
        cp artifacts/build-cross-platform-tools-macosx/spin2cpp ./bin/spin2cpp.mac
        cp artifacts/build-cross-platform-tools-rpi/flexcc ./bin/flexcc.rpi
        cp artifacts/build-cross-platform-tools-rpi/flexspin ./bin/flexspin.rpi
        cp artifacts/build-cross-platform-tools-rpi/spin2cpp ./bin/spin2cpp.rpi
        cp artifacts/build-cross-platform-tools-win32/flexcc ./bin/flexcc.exe
        cp artifacts/build-cross-platform-tools-win32/flexspin ./bin/flexspin.exe
        cp artifacts/build-cross-platform-tools-win32/spin2cpp ./bin/spin2cpp.exe
        rm -R artifacts
    
    - name: Change permissions
      run: chmod a+rwx ./bin/*
    
    - name: Configure Git
      run: |
        git config --global user.name 'rileymccarthy'
        git config --global user.email 'riley.mccarthy@yahoo.com'
    
    - name: Commit and push changes
      run: |
        git add 'package.json'
        git add './bin/*'
        git add './include/*'
        git commit -am "Build v${{ github.event.inputs.version }}"
        git push
    
    - name: Create and push tag
      run: |
        git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.version }}
        files: bin/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
